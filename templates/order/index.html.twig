{% extends 'base.html.twig' %}

{% block title %}My Orders{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <style>
        .order-card {
            transition: transform 0.2s;
        }
        .order-card:hover {
            transform: translateY(-2px);
        }
        .status-badge {
            padding: 0.25rem 0.75rem;
            border-radius: 9999px;
            font-size: 0.875rem;
            font-weight: 500;
        }
        .status-pending {
            background-color: #FEF3C7;
            color: #92400E;
        }
        .status-processing {
            background-color: #DBEAFE;
            color: #1E40AF;
        }
        .status-completed {
            background-color: #D1FAE5;
            color: #065F46;
        }
        .status-cancelled {
            background-color: #FEE2E2;
            color: #991B1B;
        }
    </style>
{% endblock %}

{% block body %}
<div class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-8">My Orders</h1>

    {% if orders|length > 0 %}
        <div class="bg-white shadow-lg rounded-lg overflow-hidden">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Order ID</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Date</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Total</th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    {% for order in orders %}
                        <tr>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-900">#{{ order.id }}</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-900">{{ order.createdAt|date('Y-m-d H:i') }}</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                                    {% if order.status == 'pending' %}bg-yellow-100 text-yellow-800
                                    {% elseif order.status == 'processing' %}bg-blue-100 text-blue-800
                                    {% elseif order.status == 'completed' %}bg-green-100 text-green-800
                                    {% else %}bg-gray-100 text-gray-800{% endif %}">
                                    {{ order.status|capitalize }}
                                </span>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap">
                                <div class="text-sm text-gray-900">${{ order.total|number_format(2) }}</div>
                            </td>
                            <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                                <a href="{{ path('app_order_show', {id: order.id}) }}" class="text-blue-600 hover:text-blue-900">View Details</a>
                            </td>
                        </tr>
                    {% endfor %}
                </tbody>
            </table>
        </div>
    {% else %}
        <div class="text-center py-12">
            <h2 class="text-2xl font-semibold text-gray-600">You haven't placed any orders yet</h2>
            <p class="mt-2 text-gray-500">Start shopping to see your orders here.</p>
            <a href="{{ path('app_home') }}" class="mt-4 inline-block bg-blue-500 text-white px-6 py-2 rounded hover:bg-blue-600">Start Shopping</a>
        </div>
    {% endif %}
</div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const statusFilter = document.getElementById('status-filter');
        const sortBy = document.getElementById('sort-by');
        const orderCards = document.querySelectorAll('.order-card');

        function filterAndSortOrders() {
            const status = statusFilter.value;
            const sort = sortBy.value;
            
            // Filter orders
            orderCards.forEach(card => {
                const orderStatus = card.querySelector('.status-badge').textContent.trim().toLowerCase();
                if (!status || orderStatus === status) {
                    card.style.display = '';
                } else {
                    card.style.display = 'none';
                }
            });

            // Sort orders
            const ordersContainer = document.querySelector('.grid');
            const orders = Array.from(orderCards);
            
            orders.sort((a, b) => {
                const aDate = new Date(a.querySelector('.text-gray-600').textContent);
                const bDate = new Date(b.querySelector('.text-gray-600').textContent);
                const aTotal = parseFloat(a.querySelector('.text-gray-600:nth-child(2)').textContent.replace('$', ''));
                const bTotal = parseFloat(b.querySelector('.text-gray-600:nth-child(2)').textContent.replace('$', ''));

                switch(sort) {
                    case 'oldest':
                        return aDate - bDate;
                    case 'total-high':
                        return bTotal - aTotal;
                    case 'total-low':
                        return aTotal - bTotal;
                    default: // newest
                        return bDate - aDate;
                }
            });

            orders.forEach(order => {
                if (order.style.display !== 'none') {
                    ordersContainer.appendChild(order);
                }
            });
        }

        statusFilter.addEventListener('change', filterAndSortOrders);
        sortBy.addEventListener('change', filterAndSortOrders);
    });
    </script>
{% endblock %} 