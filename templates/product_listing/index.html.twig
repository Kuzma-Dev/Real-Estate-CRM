{% extends 'base.html.twig' %}

{% block title %}Products{% endblock %}

{% block body %}
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold mb-8">Our Products</h1>

        <div class="bg-white rounded-lg shadow-md p-6 mb-8">
            <form method="get" action="{{ path('app_product_listing') }}" class="space-y-4">
                <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
                    <div>
                        <label for="search" class="block text-sm font-medium text-gray-700 mb-1">Search</label>
                        <input type="text" name="search" id="search" value="{{ app.request.query.get('search') }}" 
                               class="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                               placeholder="Search by name or description">
                    </div>
                    <div>
                        <label for="minPrice" class="block text-sm font-medium text-gray-700 mb-1">Min Price</label>
                        <input type="number" name="minPrice" id="minPrice" value="{{ app.request.query.get('minPrice') }}" 
                               class="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                               placeholder="Min price">
                    </div>
                    <div>
                        <label for="maxPrice" class="block text-sm font-medium text-gray-700 mb-1">Max Price</label>
                        <input type="number" name="maxPrice" id="maxPrice" value="{{ app.request.query.get('maxPrice') }}" 
                               class="w-full rounded-md border-gray-300 shadow-sm focus:border-blue-500 focus:ring-blue-500"
                               placeholder="Max price">
                    </div>
                </div>
                <div class="flex justify-end space-x-4">
                    <a href="{{ path('app_product_listing') }}" class="bg-gray-200 text-gray-800 px-4 py-2 rounded hover:bg-gray-300">
                        Clear
                    </a>
                    <button type="submit" class="bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600">
                        Search
                    </button>
                </div>
            </form>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            {% for product in products %}
                <div class="bg-white rounded-lg shadow-md overflow-hidden">
                    {% if product.image %}
                        <img src="{{ asset('uploads/products/' ~ product.image) }}" alt="{{ product.name }}" class="w-full h-48 object-cover">
                    {% else %}
                        <div class="w-full h-48 bg-gray-200 flex items-center justify-center">
                            <span class="text-gray-400">No image</span>
                        </div>
                    {% endif %}
                    <div class="p-4">
                        <h2 class="text-xl font-semibold mb-2">{{ product.name }}</h2>
                        <p class="text-gray-600 mb-4">{{ product.description|slice(0, 100) }}{% if product.description|length > 100 %}...{% endif %}</p>
                        <p class="text-lg font-bold text-blue-600 mb-4">${{ product.price }}</p>
                        <div class="flex flex-col space-y-4">
                            <div class="flex items-center space-x-2">
                                <button onclick="decrementQuantity({{ product.id }})" class="bg-gray-200 text-gray-600 px-3 py-1 rounded hover:bg-gray-300">-</button>
                                <input type="number" id="quantity-{{ product.id }}" value="1" min="1" class="w-16 text-center border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500">
                                <button onclick="incrementQuantity({{ product.id }})" class="bg-gray-200 text-gray-600 px-3 py-1 rounded hover:bg-gray-300">+</button>
                            </div>
                            <form method="post" action="{{ path('app_cart_add', {'id': product.id}) }}" class="add-to-cart-form">
                                <input type="hidden" name="_token" value="{{ csrf_token('add_to_cart') }}">
                                <input type="hidden" name="quantity" id="form-quantity-{{ product.id }}" value="1">
                                <button type="submit" class="w-full bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors">
                                    Add to Cart
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            {% else %}
                <div class="col-span-full text-center py-8">
                    <p class="text-gray-500">No products found</p>
                </div>
            {% endfor %}
        </div>
    </div>

    <script>
        function incrementQuantity(productId) {
            const input = document.getElementById(`quantity-${productId}`);
            const formInput = document.getElementById(`form-quantity-${productId}`);
            const newValue = parseInt(input.value) + 1;
            input.value = newValue;
            formInput.value = newValue;
        }

        function decrementQuantity(productId) {
            const input = document.getElementById(`quantity-${productId}`);
            const formInput = document.getElementById(`form-quantity-${productId}`);
            const newValue = parseInt(input.value) - 1;
            if (newValue >= 1) {
                input.value = newValue;
                formInput.value = newValue;
            }
        }

        document.addEventListener('DOMContentLoaded', function() {
            document.querySelectorAll('.add-to-cart-form').forEach(form => {
                form.addEventListener('submit', function(e) {
                    e.preventDefault();
                    const formData = new FormData(this);
                    
                    fetch(this.action, {
                        method: 'POST',
                        body: formData
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            const alert = document.createElement('div');
                            alert.className = 'fixed top-4 right-4 bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded z-50';
                            alert.textContent = data.message;
                            document.body.appendChild(alert);
                            setTimeout(() => alert.remove(), 3000);
                        } else {
                            throw new Error(data.message || 'Error adding product to cart');
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        const alert = document.createElement('div');
                        alert.className = 'fixed top-4 right-4 bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded z-50';
                        alert.textContent = error.message || 'Error adding product to cart';
                        document.body.appendChild(alert);
                        setTimeout(() => alert.remove(), 3000);
                    });
                });
            });
        });
    </script>
{% endblock %} 